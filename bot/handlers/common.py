from bot import bot
from bot.models import User
from bot.keyboards import main_markup
from bot.texts import MAIN_TEXT
from bot.services import get_daily_statistics, get_weekly_statistics

import logging

logger = logging.getLogger(__name__)

def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    from bot.handlers.registration import start_registration
    start_registration(message)

def menu_m(message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    chat_id = message.chat.id if hasattr(message, 'chat') else message.from_user.id
    bot.send_message(
        chat_id=chat_id,
        text=MAIN_TEXT,
        reply_markup=main_markup
    )

def format_expenses_message(expenses):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö"""
    if not expenses:
        return "0.00 ‚ÇΩ"
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    if not isinstance(expenses, dict):
        return "0.00 ‚ÇΩ"
        
    total = expenses.get('total', 0)
    details = expenses.get('details', {})
    
    if total <= 0:
        return "0.00 ‚ÇΩ"
    
    message = f"{total:.2f} ‚ÇΩ\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if details:
        message += f"üìã *–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤:*\n"
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—É–º–º—ã
        sorted_details = sorted(
            details.items(), 
            key=lambda x: x[1]['amount'], 
            reverse=True
        )
        
        for service, service_details in sorted_details:
            amount = service_details.get('amount', 0)
            count = service_details.get('count', 1)
            items = service_details.get('items', [])
            
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –µ—Å—Ç—å
            items_count = len(items) if items else 0
            items_suffix = ""
            if items_count > 0:
                items_suffix = f" ({items_count} –æ–±—ä—è–≤–ª.)"
            
            message += f"   ‚Ä¢ {service}{items_suffix}: {amount:.2f} ‚ÇΩ ({count} –æ–ø–µ—Ä.)\n"
    
    return message

def daily_report(call):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    chat_id = call.message.chat.id
    user_id = call.from_user.id

    bot.send_message(chat_id, "‚è≥ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –ê–≤–∏—Ç–æ...")
    
    try:
        user = User.objects.get(telegram_id=user_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_daily_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {response['date']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:*\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è: {response['reviews']['today']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–§–∏–Ω–∞–Ω—Å—ã:*\n"
        message_text += f"   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {response['balance_real']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ë–æ–Ω—É—Å—ã: {response['balance_bonus']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ê–≤–∞–Ω—Å: {response['advance']} ‚ÇΩ\n\n"
        
        message_text += f"üí∏ *–†–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è:* "
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
        expenses_message = format_expenses_message(response.get('expenses', {}))
        message_text += expenses_message
        
        bot.send_message(chat_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

def weekly_report(call):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    bot.send_message(chat_id, "‚è≥ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –ê–≤–∏—Ç–æ...")
    
    try:
        user = User.objects.get(telegram_id=user_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_weekly_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥: {response['period']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:*\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: {response['reviews']['weekly']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–§–∏–Ω–∞–Ω—Å—ã:*\n"
        message_text += f"   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {response['balance_real']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ë–æ–Ω—É—Å—ã: {response['balance_bonus']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ê–≤–∞–Ω—Å: {response['advance']} ‚ÇΩ\n\n"
        
        message_text += f"üí∏ *–†–∞—Å—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é:* "
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
        expenses_message = format_expenses_message(response.get('expenses', {}))
        message_text += expenses_message
        
        bot.send_message(chat_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

def send_daily_report(telegram_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = User.objects.get(telegram_id=telegram_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_daily_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {response['date']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:*\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è: {response['reviews']['today']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–§–∏–Ω–∞–Ω—Å—ã:*\n"
        message_text += f"   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {response['balance_real']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ë–æ–Ω—É—Å—ã: {response['balance_bonus']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ê–≤–∞–Ω—Å: {response['advance']} ‚ÇΩ\n\n"
        
        message_text += f"üí∏ *–†–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è:* "
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
        expenses_message = format_expenses_message(response.get('expenses', {}))
        message_text += expenses_message

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π ID –¥–ª—è –¥–Ω–µ–≤–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
        bot.send_message(telegram_id, message_text, parse_mode="Markdown")
        if user.daily_report_tg_id and user.daily_report_tg_id != telegram_id:
            bot.send_message(user.daily_report_tg_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")

def send_weekly_report(telegram_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = User.objects.get(telegram_id=telegram_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_weekly_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥: {response['period']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:*\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: {response['reviews']['weekly']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–§–∏–Ω–∞–Ω—Å—ã:*\n"
        message_text += f"   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {response['balance_real']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ë–æ–Ω—É—Å—ã: {response['balance_bonus']} ‚ÇΩ\n"
        message_text += f"   ‚Ä¢ –ê–≤–∞–Ω—Å: {response['advance']} ‚ÇΩ\n\n"
        
        message_text += f"üí∏ *–†–∞—Å—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é:* "
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
        expenses_message = format_expenses_message(response.get('expenses', {}))
        message_text += expenses_message

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π ID –¥–ª—è –Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
        bot.send_message(telegram_id, message_text, parse_mode="Markdown")
        if user.weekly_report_tg_id and user.weekly_report_tg_id != telegram_id:
            bot.send_message(user.weekly_report_tg_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
