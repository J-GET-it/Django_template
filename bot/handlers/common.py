from bot import bot
from bot.models import User
from bot.keyboards import main_markup
from bot.texts import MAIN_TEXT
from bot.services import get_daily_statistics, get_weekly_statistics

import logging
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

logger = logging.getLogger(__name__)

def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    from bot.handlers.registration import start_registration
    start_registration(message)

def menu_m(message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    chat_id = message.chat.id if hasattr(message, 'chat') else message.from_user.id
    bot.send_message(
        chat_id=chat_id,
        text=MAIN_TEXT,
        reply_markup=main_markup
    )

def daily_report(call):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    chat_id = call.message.chat.id
    user_id = call.from_user.id

    bot.send_message(chat_id, "‚è≥ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –ê–≤–∏—Ç–æ...")
    
    try:
        user = User.objects.get(telegram_id=user_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_daily_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {response['date']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:* {response['chats']}\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è: {response['reviews']['today']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        message_text += f"   ‚Ä¢ –° –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º XL: {response['items']['with_xl_promotion']}\n\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–ë–∞–ª–∞–Ω—Å:* {response['balance']} ‚ÇΩ"
        
        bot.send_message(chat_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

def weekly_report(call):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    bot.send_message(chat_id, "‚è≥ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –ê–≤–∏—Ç–æ...")
    
    try:
        user = User.objects.get(telegram_id=user_id)
        client_id = user.client_id
        client_secret = user.client_secret
        response = get_weekly_statistics(client_id, client_secret)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_text = f"üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥: {response['period']}*\n\n"
        message_text += f"üìû *–ó–≤–æ–Ω–∫–∏:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['calls']['total']}\n"
        message_text += f"   ‚Ä¢ –û—Ç–≤–µ—á–µ–Ω–æ: {response['calls']['answered']}\n"
        message_text += f"   ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {response['calls']['missed']}\n\n"
        
        message_text += f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏—è:* {response['chats']}\n"
        message_text += f"üì± *–ü–æ–∫–∞–∑–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* {response['phones_received']}\n\n"
        
        message_text += f"‚≠ê *–†–µ–π—Ç–∏–Ω–≥:* {response['rating']}\n"
        message_text += f"üëç *–û—Ç–∑—ã–≤—ã:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['reviews']['total']}\n"
        message_text += f"   ‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: {response['reviews']['weekly']}\n\n"
        
        message_text += f"üìù *–û–±—ä—è–≤–ª–µ–Ω–∏—è:*\n"
        message_text += f"   ‚Ä¢ –í—Å–µ–≥–æ: {response['items']['total']}\n"
        message_text += f"   ‚Ä¢ –° –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º XL: {response['items']['with_xl_promotion']}\n\n"
        
        message_text += f"üëÅ *–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {response['statistics']['views']}\n"
        message_text += f"üì≤ *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {response['statistics']['contacts']}\n"
        message_text += f"‚ù§Ô∏è *–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:* {response['statistics']['favorites']}\n\n"
        
        message_text += f"üí∞ *–ë–∞–ª–∞–Ω—Å:* {response['balance']} ‚ÇΩ"
        
        bot.send_message(chat_id, message_text, parse_mode="Markdown")
        
    except User.DoesNotExist:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
